name: Build-Prop Pixel

on:
  workflow_dispatch:
    inputs:
      device_name:
        description: "Device Name"
        required: true
        default: "husky"
        type: choice
 
        options:
          - shiba
          - husky
          - cheetah
          - panther
          - oriole
          - raven
          - barbet
          - redfin
          - bramble
          - sunfish
          - coral
          - flame
          - bonito
          - sailfish

jobs:
  prepare_build:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Determine tag name
        id: get_tag_name
        run: |
          echo "tag_name=$(date '+%Y%m%d')" >> $GITHUB_OUTPUT
          echo "friendly_tag_name=$(date '+%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        with:
          tag_name: ${{ steps.get_tag_name.outputs.tag_name }}
          release_name: ${{ steps.get_tag_name.outputs.friendly_tag_name }}
          draft: false
          prerelease: false

  build:
    name: Build Props
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install dos2unix python3 python3-pip
        uses: daaku/gh-action-apt-install@v4
        with:
          packages: dos2unix python3 python3-pip

      - name: Install protobuf
        run: |
          pip install --upgrade pip
          pip3 install -Iv protobuf==3.20.3

      - name: Make executable all script
        run: |
          chmod +x *.sh

      - name: Download last ota ${{ github.event.inputs.device_name }}
        run: |
          ./download_last_ota_build.sh ${{ github.event.inputs.device_name }}

      - name: Extract Image and build prop
        run: |
          ./extract_images.sh

      - name: Read final_name from file
        id: read_name
        run: | 
          echo "final_name=$(cat build.txt)" >> $GITHUB_OUTPUT
        working-directory: ${{ github.workspace }}

      - name: Upload files to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        with:
          upload_url: ${{ needs.prepare_build.outputs.upload_url }}
          asset_path: result
          asset_name: ${{ steps.read_name.outputs.final_name }}
          asset_content_type: application/zip

      - name: Add information to release
        uses: irongut/EditRelease@v1.2.0
        with:
          token: ${{ secrets.TOKEN_GITHUB }}
          id: ${{ needs.prepare_build.outputs.id }}
          replacebody: false
          body: |
            #### Module
            - File name: `${{ steps.read_name.outputs.final_name }}`
            - File hash (SHA256): `${{ steps.extract_and_build.outputs.module_hash }}`
            #### Firmware
            - Build ID: `${{ steps.extract_and_build.outputs.device_build_id }}`
            - Android version: `${{ steps.extract_and_build.outputs.device_build_android_version }}`
            - Security patch: `${{ steps.extract_and_build.outputs.device_build_security_patch }}`

      - name: Copy prop to result ${{ matrix.device_name }}
        run: |
          mkdir -p result
          cp ./**/**/{system,module}.prop result/
          cp -r META-INF/ result/
          cp customize.sh result/

      - name: Upload Prop ${{ matrix.device_name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.read_name.outputs.final_name }}
          path: result
          if-no-files-found: error
